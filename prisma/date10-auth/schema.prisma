generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATE10_AUTH_DATABASE_URL")
}

model accounts_user {
  last_login                     DateTime?                        @db.Timestamptz(6)
  is_superuser                   Boolean
  id                             String                           @id @db.Uuid
  last_name                      String                           @db.VarChar(150)
  first_name                     String                           @db.VarChar(150)
  is_active                      Boolean
  photo_url                      String?                          @db.VarChar(200)
  email                          String                           @unique @db.VarChar(254)
  password                       String                           @db.VarChar(128)
  phone                          String?                          @unique(map: "accounts_user_phone_c603acdd_uniq") @db.VarChar(20)
  type                           String                           @db.VarChar(20)
  created_at                     DateTime                         @db.Timestamptz(6)
  is_staff                       Boolean
  identity_document              String?                          @db.VarChar(200)
  google_id                      String?                          @db.VarChar(100)
  accounts_user_groups           accounts_user_groups[]
  accounts_user_user_permissions accounts_user_user_permissions[]

  @@index([email], map: "accounts_user_email_b2644a56_like")
  @@index([phone], map: "accounts_user_phone_c603acdd_like")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model accounts_user_groups {
  id            BigInt        @id @default(autoincrement())
  user_id       String        @db.Uuid
  group_id      Int
  auth_group    auth_group    @relation(fields: [group_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "accounts_user_groups_group_id_bd11a704_fk_auth_group_id")
  accounts_user accounts_user @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "accounts_user_groups_user_id_52b62117_fk_accounts_user_id")

  @@unique([user_id, group_id], map: "accounts_user_groups_user_id_group_id_59c0b32f_uniq")
  @@index([group_id], map: "accounts_user_groups_group_id_bd11a704")
  @@index([user_id], map: "accounts_user_groups_user_id_52b62117")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model accounts_user_user_permissions {
  id              BigInt          @id @default(autoincrement())
  user_id         String          @db.Uuid
  permission_id   Int
  auth_permission auth_permission @relation(fields: [permission_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "accounts_user_user_p_permission_id_113bb443_fk_auth_perm")
  accounts_user   accounts_user   @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "accounts_user_user_p_user_id_e4f0a161_fk_accounts_")

  @@unique([user_id, permission_id], map: "accounts_user_user_permi_user_id_permission_id_2ab516c2_uniq")
  @@index([permission_id], map: "accounts_user_user_permissions_permission_id_113bb443")
  @@index([user_id], map: "accounts_user_user_permissions_user_id_e4f0a161")
}

model auth_group {
  id                     Int                      @id @default(autoincrement())
  name                   String                   @unique @db.VarChar(150)
  accounts_user_groups   accounts_user_groups[]
  auth_group_permissions auth_group_permissions[]

  @@index([name], map: "auth_group_name_a6ea08ec_like")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model auth_group_permissions {
  id              BigInt          @id @default(autoincrement())
  group_id        Int
  permission_id   Int
  auth_permission auth_permission @relation(fields: [permission_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "auth_group_permissio_permission_id_84c5c92e_fk_auth_perm")
  auth_group      auth_group      @relation(fields: [group_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "auth_group_permissions_group_id_b120cbf9_fk_auth_group_id")

  @@unique([group_id, permission_id], map: "auth_group_permissions_group_id_permission_id_0cd325b0_uniq")
  @@index([group_id], map: "auth_group_permissions_group_id_b120cbf9")
  @@index([permission_id], map: "auth_group_permissions_permission_id_84c5c92e")
}

/// This model has constraints using non-default deferring rules and requires additional setup for migrations. Visit https://pris.ly/d/constraint-deferring for more info.
model auth_permission {
  id                             Int                              @id @default(autoincrement())
  name                           String                           @db.VarChar(255)
  content_type_id                Int
  codename                       String                           @db.VarChar(100)
  accounts_user_user_permissions accounts_user_user_permissions[]
  auth_group_permissions         auth_group_permissions[]
  django_content_type            django_content_type              @relation(fields: [content_type_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "auth_permission_content_type_id_2f476e4b_fk_django_co")

  @@unique([content_type_id, codename], map: "auth_permission_content_type_id_codename_01ab375a_uniq")
  @@index([content_type_id], map: "auth_permission_content_type_id_2f476e4b")
}

model django_content_type {
  id              Int               @id @default(autoincrement())
  app_label       String            @db.VarChar(100)
  model           String            @db.VarChar(100)
  auth_permission auth_permission[]

  @@unique([app_label, model], map: "django_content_type_app_label_model_76bd3d3b_uniq")
}

model django_migrations {
  id      BigInt   @id @default(autoincrement())
  app     String   @db.VarChar(255)
  name    String   @db.VarChar(255)
  applied DateTime @db.Timestamptz(6)
}
